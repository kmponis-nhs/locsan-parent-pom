<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.locsan</groupId>
	<artifactId>locsan-parent-pom</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>locsan-parent-pom</name>
	<url>http://maven.apache.org</url>

	<distributionManagement>
		<repository>
			<id>tanar</id>
			<name>Internal Releases</name>
			<url>http://tanar.edin.uk.sopra:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>tanar</id>
			<name>Internal Releases</name>
			<url>http://tanar.edin.uk.sopra:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- Version management for locsan dependencies NOTE: Ensure this is updated 
		continually as and when we need to! -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.hibernate>5.1.8.Final</version.hibernate>
		<version.swagger>2.9.2</version.swagger>
		<version.log4j2>2.10.0</version.log4j2>
		<version.spring>5.0.9.RELEASE</version.spring>
		<version.spring.data.rest>3.0.10.RELEASE</version.spring.data.rest>
		<version.spring.security>5.1.3.RELEASE</version.spring.security>
		<version.spring.jpa>2.0.10.RELEASE</version.spring.jpa>
		<version.spring.boot.starter.actuator>2.0.5.RELEASE</version.spring.boot.starter.actuator>
		<version.javax.servlet>3.1.0</version.javax.servlet>
		<version.jackson>2.9.6</version.jackson>
		<version.lombok>1.16.22</version.lombok>
		<version.apache.tomcat>9.0.1</version.apache.tomcat>
		<version.oracle.jdbc>12.1.0.1.0</version.oracle.jdbc>
		<version.glassfish>2.26</version.glassfish>
		<version.javax.ws>2.1.1</version.javax.ws>
		<version.junit>5.1.1</version.junit>
		<version.junit.platform>1.1.0</version.junit.platform>
		<version.restassured>2.9.0</version.restassured>
		<version.jayway>2.4.0</version.jayway>
		<version.hamcrest>2.1</version.hamcrest>
		<version.pitest.parent.pom>1.1.10</version.pitest.parent.pom>
		<version.pitest.maven>1.4.3</version.pitest.maven>
		<version.pitest.junit5.plugin>0.8</version.pitest.junit5.plugin>
		<version.junit.platform.surefire.provider>1.2.0-M1</version.junit.platform.surefire.provider>
		<version.junit.platform.surefire.jupiter>5.2.0-M1</version.junit.platform.surefire.jupiter>
		<version.maven.surefire.plugin>2.22.1</version.maven.surefire.plugin>
		<version.maven.war.plugin>3.2.2</version.maven.war.plugin>
		<version.maven.compiler.plugin>3.8.0</version.maven.compiler.plugin>
		<version.mockito>2.26.0</version.mockito>
		<version.mockito.core>2.24.0</version.mockito.core>
		<version.performance.indicator>0.0.1</version.performance.indicator>
		<version.apache.commons.io>2.6</version.apache.commons.io>
		<version.jacoco>0.8.3</version.jacoco>
		<version.jasper.reports>6.8.0</version.jasper.reports>

		<version.java>1.8</version.java>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Logging -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${version.log4j2}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${version.log4j2}</version>
			</dependency>

			<!-- Spring Dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${version.spring}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${version.spring}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${version.spring}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-rest-webmvc</artifactId>
				<version>${version.spring.data.rest}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${version.spring.security}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${version.spring.security}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${version.spring.jpa}</version>
			</dependency>
			<!-- CHECK: Does it import a lot? Needed to display logs from performance-indicator.jar -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${version.spring.boot.starter.actuator}</version>
			</dependency>

			<!-- Added after changing dependencies to spring framework as below wasn't 
				present during compilation -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${version.javax.servlet}</version>
			</dependency>

			<!-- Entity to JSON conversion done automatically by Jackson 2 -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${version.jackson}</version>
			</dependency>

			<!-- Replace constructor, Getter and Setters -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${version.lombok}</version>
			</dependency>

			<!-- Swagger Stuff -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${version.swagger}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${version.swagger}</version>
			</dependency>

			<!-- Hibernate -->
			<!-- Warning appears as overriding Spring Boot, using JBWS version -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${version.hibernate}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${version.hibernate}</version>
			</dependency>
			<!-- NOTE: Need to add ojdbc7-12.1.0.1.0.jar to tomcat/lib -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc7</artifactId>
				<version>${version.oracle.jdbc}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.apache.commons.io}</version>
			</dependency>

			<!-- tomcat dbcp -->
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-dbcp</artifactId>
				<version>${version.apache.tomcat}</version>
			</dependency>

			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${version.javax.ws}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>${version.glassfish}</version>
			</dependency>

			<!-- Calculating performance times -->
			<dependency>
				<groupId>com.sopra.steria</groupId>
				<artifactId>performance-indicator</artifactId>
				<version>${version.performance.indicator}</version>
			</dependency>
			
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${version.jasper.reports}</version>
			</dependency>

			<!-- TEST Libraries -->
			<!-- JUnit Test Libraries -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-launcher</artifactId>
				<version>${version.junit.platform}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-runner</artifactId>
				<version>${version.junit.platform}</version>
				<scope>test</scope>
			</dependency>

			<!-- RestAssured Test Libraries -->
			<dependency>
				<groupId>com.jayway.restassured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>${version.restassured}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>${version.jayway}</version>
				<scope>test</scope>
			</dependency>

			<!-- hamcrest for matching (easier for comparison during REST API testing) -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>${version.hamcrest}</version>
				<scope>test</scope>
			</dependency>

			<!-- PIT Mutation Testing library - this may be omitted/configured to 
				NOT use the REST API sections as not really suitable for API testing -->
			<dependency>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-parent</artifactId>
				<version>${version.pitest.parent.pom}</version>
				<type>pom</type>
			</dependency>

			<!-- Mockito Junit + Jupiter functionality -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${version.mockito}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${version.mockito.core}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- build information -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${version.pitest.maven}</version>
					<executions>
						<execution>
							<id>pit-report</id>
							<!-- optional, this example attached the goal into mvn test phase -->
							<phase>test</phase>
							<goals>
								<goal>mutationCoverage</goal>
							</goals>
						</execution>
					</executions>

					<!-- https://github.com/hcoles/pitest/issues/284 -->
					<!-- Need this to support JUnit 5 -->
					<dependencies>
						<dependency>
							<groupId>org.pitest</groupId>
							<artifactId>pitest-junit5-plugin</artifactId>
							<version>${version.pitest.junit5.plugin}</version>
						</dependency>
					</dependencies>
					<configuration>
						<avoidCallsTo>
							<avoidCallsTo>java.util.logging</avoidCallsTo>
							<avoidCallsTo>org.apache.log4j</avoidCallsTo>
							<avoidCallsTo>org.slf4j</avoidCallsTo>
							<avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
						</avoidCallsTo>
						<!-- need to specify packages for PIT testing -->
						<targetClasses>
							<param>com.web.*</param>
						</targetClasses>
						<!-- Equivalent testing packages -->
						<targetTests>
							<param>com.web.*</param>
						</targetTests>
					</configuration>
				</plugin>
				<plugin>
					<!-- Maven surefire plugin for command line mvn operations -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.maven.surefire.plugin}</version>
					<dependencies>
						<dependency>
							<groupId>org.junit.platform</groupId>
							<artifactId>junit-platform-surefire-provider</artifactId>
							<version>1.2.0-M1</version>
						</dependency>
						<dependency>
							<groupId>org.junit.jupiter</groupId>
							<artifactId>junit-jupiter-engine</artifactId>
							<version>5.2.0-M1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven.compiler.plugin}</version>
					<configuration>
						<source>${version.java}</source>
						<target>${version.java}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.maven.war.plugin}</version>
					<configuration>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${version.jacoco}</version>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<excludes>
									<exclude>com/web/service/**/*.class</exclude>
									<exclude>com/web/service/**/configuration</exclude>
									<exclude>com/web/service/**/model</exclude>
								</excludes>
								<dataFile>target/jacoco.exec</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>target/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<systemPropertyVariables>
							<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
